"use strict";(self.webpackChunkproject=self.webpackChunkproject||[]).push([[991],{4991:(e,n,t)=>{t.r(n),t.d(n,{default:()=>u});var r=t(579);const o=()=>(0,r.jsxs)("div",{children:[(0,r.jsx)("h1",{className:"underline",children:"React Router"}),(0,r.jsx)("p",{children:"To set up routing in a React project, you'll use React Router, a popular library for managing navigation between different views. Here's a breakdown of how to implement the different routing functionalities:"})]}),s=()=>(0,r.jsxs)("div",{children:[(0,r.jsx)("br",{}),(0,r.jsx)("hr",{}),(0,r.jsx)("h2",{children:"Install React Router"}),(0,r.jsx)("p",{children:"Run the following command in BASH to install 'react-router-dom' in your React project."}),(0,r.jsx)("h3",{children:"Code:"}),(0,r.jsx)("pre",{children:(0,r.jsx)("code",{children:"npm install react-router-dom"})})]}),i=()=>(0,r.jsxs)("div",{children:[(0,r.jsx)("br",{}),(0,r.jsx)("hr",{}),(0,r.jsx)("h2",{children:"Setting up Basic Routes"}),(0,r.jsx)("p",{children:"This is how you can set up routes to different components."}),(0,r.jsx)("h3",{children:"Code:"}),(0,r.jsx)("pre",{children:(0,r.jsx)("code",{children:'// App.js\nimport React from "react";\nimport { BrowserRouter as Router, Route, Routes } from "react-router-dom";\nimport Home from "./components/Home";\nimport About from "./components/About";\n\nfunction App() {\n  return (\n    <Router>\n      <Routes>\n        <Route path="/" element={<Home />} />\n        <Route path="/about" element={<About />} />\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n'})}),(0,r.jsx)("p",{children:"The path prop defines the URL path, and the element prop specifies the component to render when the path matches."}),(0,r.jsx)("p",{children:"You can manually enter URL paths in the browser to test routes and ensure they render the correct components."})]}),a=()=>(0,r.jsxs)("div",{children:[(0,r.jsx)("br",{}),(0,r.jsx)("hr",{}),(0,r.jsx)("h2",{children:"Nested Routes"}),(0,r.jsx)("p",{children:"You can nest routes inside another route. For example, suppose you want to have a user dashboard with subpages."}),(0,r.jsx)("h3",{children:"Code:"}),(0,r.jsx)("pre",{children:(0,r.jsx)("code",{children:'// Dashboard.js\nimport { Outlet, Link } from "react-router-dom";\n\nfunction Dashboard() {\n  return (\n    <div>\n      <h1>Dashboard</h1>\n      <nav>\n        <Link to="profile">Profile</Link>\n        <Link to="settings">Settings</Link>\n      </nav>\n      <Outlet />\n    </div>\n  );\n}\n\nexport default Dashboard;\n'})}),(0,r.jsx)("br",{}),(0,r.jsx)("pre",{children:(0,r.jsx)("code",{children:'// App.js\nimport React from "react";\nimport { BrowserRouter as Router, Routes, Route } from "react-router-dom";\nimport Home from "./components/Home";\nimport About from "./components/About";\nimport Dashboard from "./components/Dashboard";\nimport Profile from "./components/Profile";\nimport Settings from "./components/Settings";\n\nfunction App() {\n  return (\n    <Router>\n      <Routes>\n        <Route path="/" element={<Home />} />\n        <Route path="/about" element={<About />} />\n\n        <Route path="/dashboard" element={<Dashboard />}>\n          <Route path="profile" element={<Profile />} />\n          <Route path="settings" element={<Settings />} />\n        </Route>\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n'})}),(0,r.jsx)("p",{children:"In 'Dashboard.js', the 'Outlet' component is used to render the child routes dynamically based on the URL. The child routes, such as 'Profile.js' and 'Settings.js', are nested inside '/dashboard' with their respective paths (e.g., '/dashboard/profile' and '/dashboard/settings'), allowing them to be displayed within the 'Dashboard' component while maintaining the parent layout."})]}),h=()=>(0,r.jsxs)("div",{children:[(0,r.jsx)("br",{}),(0,r.jsx)("hr",{}),(0,r.jsx)("h2",{children:"Dynamic Routing"}),(0,r.jsx)("p",{children:"Dynamic routing allows you to pass parameters via the URL. For example, if you want a user profile page that varies by user ID."}),(0,r.jsx)("h3",{children:"Code:"}),(0,r.jsx)("pre",{children:(0,r.jsx)("code",{children:'// UserProfile.js\nimport { useParams } from "react-router-dom";\n\nfunction UserProfile() {\n  const { id } = useParams();\n\n  return <h1>User Profile: {id}</h1>;\n}\n\nexport default UserProfile;\n'})}),(0,r.jsx)("br",{}),(0,r.jsx)("pre",{children:(0,r.jsx)("code",{children:'// App.js\nimport UserProfile from "./components/UserProfile";\n\nfunction App() {\n  return (\n    <Router>\n      <Routes>\n        <Route path="/" element={<Home />} />\n        <Route path="/about" element={<About />} />\n        \n        <Route path="/dashboard/*" element={<Dashboard />}>\n          <Route path="profile" element={<Profile />} />\n          <Route path="settings" element={<Settings />} />\n        </Route>\n\n        <Route path="/user/:id" element={<UserProfile />} />\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n'})}),(0,r.jsx)("p",{children:"The ':id' in the route (path=\"/user/:id\") is a dynamic parameter that allows the route to capture different values for 'id'. You can access it inside the component using the 'useParams' hook, which retrieves the parameter value from the URL, enabling dynamic content rendering based on the provided 'id'."})]}),d=()=>(0,r.jsxs)("div",{children:[(0,r.jsx)("br",{}),(0,r.jsx)("hr",{}),(0,r.jsx)("h2",{children:"Additional Features"}),(0,r.jsx)("h3",{children:"Navigation"}),(0,r.jsx)("p",{children:"For internal navigation, use the 'Link' component, which works like an anchor tag."}),(0,r.jsx)("h3",{children:"Redirects"}),(0,r.jsx)("p",{children:"You can use the 'Navigate' component to redirect users to a different route."}),(0,r.jsx)("h3",{children:"Protected Routes"}),(0,r.jsx)("p",{children:"Protected routes can be created by wrapping them in a custom component to restrict access to certain users."})]}),u=()=>(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(o,{}),(0,r.jsx)(s,{}),(0,r.jsx)(i,{}),(0,r.jsx)(a,{}),(0,r.jsx)(h,{}),(0,r.jsx)(d,{})]})}}]);
//# sourceMappingURL=991.c7a2a43a.chunk.js.map