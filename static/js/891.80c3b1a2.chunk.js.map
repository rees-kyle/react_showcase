{"version":3,"file":"static/js/891.80c3b1a2.chunk.js","mappings":"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","sources":["components/testing/unit_testing/UnitTesting.js","components/testing/unit_testing/Install.js","components/testing/unit_testing/Setup.js","components/testing/unit_testing/Button.js","components/testing/unit_testing/Write.js","components/testing/unit_testing/Run.js","components/testing/unit_testing/BestPractices.js","pages/testing/UnitTestingPage.js"],"sourcesContent":["const UnitTesting = () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"underline\">Unit Testing</h1>\r\n      <p>\r\n        In React, ensuring code reliability is important, especially as apps grow.\r\n        Unit testing with Jest helps by verifying individual pieces of logic.\r\n        It allows you to write small, focused tests for components and functions,\r\n        helping catch bugs early and making future refactoring safer.\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UnitTesting;","const Install = () => {\r\n  return (\r\n    <div>\r\n      <br/>\r\n      <hr/>\r\n      <h2>Install Jest</h2>\r\n      <h3>Code:</h3>\r\n      <p>\r\n        Jest comes pre-installed with Create React App,\r\n        but if you're setting up a custom React project,\r\n        you can install it with BASH.\r\n      </p>\r\n      <pre>\r\n        <code>\r\n          {`npm install --save-dev jest`}\r\n        </code>\r\n      </pre>\r\n\r\n      <p>\r\n        Also, for testing React components, you may want to install 'React Testing Library'.\r\n      </p>\r\n      <pre>\r\n        <code>\r\n          {`npm install --save-dev @testing-library/react`}\r\n        </code>\r\n      </pre>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Install;","const Setup = () => {\r\n  return (\r\n    <div>\r\n      <br/>\r\n      <hr/>\r\n      <h2>Setup a Test Script</h2>\r\n      <h3>Code:</h3>\r\n      <p>\r\n        If you are using 'Create React App', this will already be configured in 'package.json'.\r\n      </p>\r\n      <pre>\r\n        <code>\r\n          {`\"scripts\": {\r\n  \"test\": \"react-scripts test\"\r\n}\r\n`}\r\n        </code>\r\n      </pre>\r\n\r\n      <p>\r\n        If not, add a test script to your 'package.json' to run Jest.\r\n      </p>\r\n      <pre>\r\n        <code>\r\n          {`\"scripts\": {\r\n  \"test\": \"jest\"\r\n}\r\n`}\r\n        </code>\r\n      </pre>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Setup;","// Import React to use JSX syntax and create a functional component\r\nimport React from 'react';\r\nimport '../../../button.css';\r\n\r\n// Define and export the Button component\r\nexport default function Button({ label, onClick }) {\r\n  // Render a button element\r\n  return <button className=\"Button\" onClick={onClick}>{label}</button>;\r\n}","import React from 'react';\r\nimport Button from './Button'; // Import the Button component\r\n\r\nexport default function Write() {\r\n  // Handler for button click\r\n  const handleClick = () => {\r\n    alert('Button was clicked!');\r\n  };\r\n\r\n  // Render the Button component with a label and an onClick handler\r\n  return (\r\n    <div>\r\n      <br/>\r\n      <hr/>\r\n      <h2>Write Unit Tests</h2>\r\n      <p>\r\n        Create test files alongside the components you want to test.\r\n        Jest will recognize files with '.test.js' or '.spec.js' extensions.\r\n      </p>\r\n\r\n      <h3>Code:</h3>\r\n      <pre>\r\n        <code>\r\n          {`// Button.js\r\nimport React from 'react';\r\nimport '../../../button.css';\r\n\r\nexport default function Button({ label, onClick }) {\r\n  return <button className=\"Button\" onClick={onClick}>{label}</button>;\r\n}\r\n`}\r\n        </code>\r\n      </pre>\r\n      <br/>\r\n      <pre>\r\n        <code>\r\n          {`// button.css\r\nbutton {\r\n    position: relative;\r\n    font-weight: bold;\r\n    left: 1rem;\r\n    top: 1rem;\r\n    margin-bottom: 2rem;\r\n    padding: 1.25rem;\r\n    border: .0625rem solid green;\r\n    border-radius: .3125rem;\r\n    background-color: #000000;\r\n    color: rgb(214, 214, 214);\r\n    font-size: 1rem;\r\n    font-weight: bold;\r\n    width: 10rem;\r\n    box-shadow: 0.625rem 0.625rem 0.0625rem rgba(0, 0, 0, 0.5);\r\n}\r\n\r\nbutton:hover {\r\n    outline: none;\r\n    box-shadow: 0 0 1rem rgba(255, 255, 255, 0.5);\r\n}\r\n\r\nbutton:active {\r\n    background-color: green;\r\n    box-shadow: 0.312rem 0.312rem 0.0312rem rgba(0, 0, 0, 0.5);\r\n}\r\n`}\r\n        </code>\r\n      </pre>\r\n      <br/>\r\n      <pre>\r\n        <code>\r\n          {`// Write.js\r\nimport React from 'react';\r\nimport Button from './Button';\r\n\r\nexport default function Write() {\r\n  const handleClick = () => {\r\n    alert('Button was clicked!');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button label=\"Click Me\" onClick={handleClick} />\r\n    </div>\r\n  );\r\n}\r\n`}\r\n        </code>\r\n      </pre>\r\n      <br/>\r\n      <pre>\r\n        <code>\r\n          {`// Button.test.js\r\nimport { render, screen, fireEvent } from '@testing-library/react';\r\nimport Button from './Button';\r\n\r\ntest('renders button with label', () => {\r\n  console.log('Running test: renders button with label');\r\n\r\n  render(<Button label=\"Click Me\" />);\r\n\r\n  const buttonElement = screen.getByText(/click me/i);\r\n  console.log('Button found with text:', buttonElement.textContent);\r\n\r\n  expect(buttonElement).toBeInTheDocument();\r\n});\r\n\r\ntest('calls onClick when clicked', () => {\r\n  console.log('Running test: calls onClick when clicked');\r\n\r\n  const handleClick = jest.fn(() => {\r\n    console.log('Click handler executed');\r\n  });\r\n\r\n  render(<Button label=\"Click Me\" onClick={handleClick} />);\r\n\r\n  const buttonElement = screen.getByText(/click me/i);\r\n  fireEvent.click(buttonElement);\r\n\r\n  console.log('Simulated click on button');\r\n\r\n  expect(handleClick).toHaveBeenCalledTimes(1);\r\n  console.log('Confirmed click handler was called once');\r\n});\r\n`}\r\n        </code>\r\n      </pre>\r\n\r\n      <h3>Output:</h3>\r\n      <Button label=\"Click Me\" onClick={handleClick} />\r\n    </div>\r\n  );\r\n}","const Run = () => {\r\n  return (\r\n    <div>\r\n      <br/>\r\n      <hr/>\r\n      <h2>Run Tests</h2>\r\n      <h3>Code:</h3>\r\n      <p>\r\n        Run your tests by executing the following code in BASH.\r\n      </p>\r\n      <pre>\r\n        <code>\r\n          {`npm test`}\r\n        </code>\r\n      </pre>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Run;","const BestPractices = () => {\r\n  return (\r\n    <div>\r\n      <br/>\r\n      <hr/>\r\n      <h2>Best Practices for Testing</h2>\r\n      <h3>Isolate components</h3>\r\n      <p>\r\n        Mock external dependencies to keep tests focused and independent.\r\n      </p>\r\n      <h3>Keep tests simple</h3>\r\n      <p>\r\n        Test one behavior per case for clarity and easier debugging.\r\n      </p>\r\n      <h3>Use meaningful names</h3>\r\n      <p>\r\n        Write descriptive test names that explain whatâ€™s being tested.\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BestPractices;","import {\r\n  UnitTesting,\r\n  Install,\r\n  Setup,\r\n  Write,\r\n  Run,\r\n  BestPractices\r\n} from '../../components/testing/unit_testing';\r\n\r\nconst UnitTestingPage = () => {\r\n  return (\r\n    <>\r\n      <UnitTesting />\r\n      <Install />\r\n      <Setup />\r\n      <Write />\r\n      <Run />\r\n      <BestPractices />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UnitTestingPage;"],"names":["UnitTesting","_jsxs","children","_jsx","className","Install","Setup","Button","_ref","label","onClick","Write","handleClick","alert","Run","BestPractices","UnitTestingPage","_Fragment"],"sourceRoot":""}