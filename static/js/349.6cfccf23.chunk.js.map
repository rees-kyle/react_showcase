{"version":3,"file":"static/js/349.6cfccf23.chunk.js","mappings":"4IAAA,MAWA,EAX6BA,KAErBC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,YAAWF,SAAC,4BAC1BC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,+F,sBCDf,MA6CA,EA7CiBG,KAEb,MAAOC,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,GAEnC,OACIP,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACIC,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,MAAAD,SAAI,cACJC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,kGAEHC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,WACJC,EAAAA,EAAAA,KAAA,OAAAD,UACIC,EAAAA,EAAAA,KAAA,QAAAD,SACK,ibAqBTC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,aACJD,EAAAA,EAAAA,MAAA,MAAIG,UAAU,SAAQF,SAAA,CAAC,eAAaI,EAAM,aAC1CH,EAAAA,EAAAA,KAAA,UAAQM,KAAK,SAASC,QAASA,IAAMH,EAASD,EAAQ,GAAGJ,SAAC,cAG1DC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,sKACD,ECiBd,EA3DkBS,KACd,MAAOC,EAASC,IAAcL,EAAAA,EAAAA,UAAS,GAYvC,OATAM,EAAAA,EAAAA,YAAU,KACN,MAAMC,EAAWC,aAAY,KACzBH,GAAWD,GAAWA,EAAU,GAAE,GACnC,KAGH,MAAO,IAAMK,cAAcF,EAAS,GACrC,KAGCd,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACIC,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,MAAAD,SAAI,eACJC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,sKAEHC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,WACJC,EAAAA,EAAAA,KAAA,OAAAD,UACIC,EAAAA,EAAAA,KAAA,QAAAD,SACK,mfAyBTC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,aACJD,EAAAA,EAAAA,MAAA,MAAIG,UAAU,SAAQF,SAAA,CAAEU,EAAQ,4BAChCT,EAAAA,EAAAA,KAAA,KAAAD,SAAG,gSAKD,ECzCd,EAViCgB,KAE7BjB,EAAAA,EAAAA,MAAAkB,EAAAA,SAAA,CAAAjB,SAAA,EACEC,EAAAA,EAAAA,KAACH,EAAoB,KACrBG,EAAAA,EAAAA,KAACE,EAAQ,KACTF,EAAAA,EAAAA,KAACQ,EAAS,M","sources":["components/hooks/usestate_and_useeffect/UseStateAndUseEffect.js","components/hooks/usestate_and_useeffect/UseState.js","components/hooks/usestate_and_useeffect/UseEffect.js","pages/hooks/UseStateAndUseEffectPage.js"],"sourcesContent":["const UseStateAndUseEffect = () => {\r\n    return (\r\n        <div>\r\n            <h1 className=\"underline\">useState and useEffect</h1>\r\n            <p>\r\n                Hooks like 'useState' and 'useEffect' are fundamental to React's functional components.\r\n            </p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UseStateAndUseEffect;","import React, { useState } from 'react';\r\nimport './../../../button.css';\r\n\r\nconst UseState = () => {\r\n    // Declare a state variable 'count' initialized at 0\r\n    const [count, setCount] = useState(0);\r\n\r\n    return (\r\n        <div>\r\n            <br/>\r\n            <hr/>\r\n            <h2>useState</h2>\r\n            <p>The useState hook allows you to add state to a functional component. Here's a basic example:</p>\r\n\r\n            <h3>Code:</h3>\r\n            <pre>\r\n                <code>\r\n                    {`import React, { useState } from 'react';\r\nimport './../../../button.css';\r\n\r\nconst UseState = () => {\r\n    const [count, setCount] = useState(0);\r\n\r\n    return (\r\n        <div>\r\n            <h1 className=\"output\">You clicked {count} times</h1>\r\n            <button type=\"button\" onClick={() => setCount(count + 1)}>\r\n                Click me\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UseState;\r\n`}\r\n                </code>\r\n            </pre>\r\n\r\n            <h3>Output:</h3>\r\n            <h1 className=\"output\">You clicked {count} times</h1>\r\n            <button type=\"button\" onClick={() => setCount(count + 1)}>\r\n                Click me\r\n            </button>\r\n            <p>'useState' takes the initial state value (e.g., 0 for the count) and returns an array with two elements: the current state and a function to update that state.</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UseState;","import React, { useEffect, useState } from 'react';\r\n\r\nconst UseEffect = () => {\r\n    const [seconds, setSeconds] = useState(0);\r\n\r\n    // Similar to componentDidMount and componentDidUpdate:\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            setSeconds(seconds => seconds + 1);\r\n        }, 1000);\r\n\r\n        // Cleanup the interval on component unmount\r\n        return () => clearInterval(interval);\r\n    }, []); // Empty array ensures this effect runs once (after initial render)\r\n\r\n    return (\r\n        <div>\r\n            <br/>\r\n            <hr/>\r\n            <h2>useEffect</h2>\r\n            <p>The useEffect hook allows you to perform side effects in function components. It's commonly used for data fetching, subscriptions, or manually changing the DOM.</p>\r\n\r\n            <h3>Code:</h3>\r\n            <pre>\r\n                <code>\r\n                    {`import React, { useEffect, useState } from 'react';\r\n\r\nconst UseEffect = () => {\r\n    const [seconds, setSeconds] = useState(0);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            setSeconds(seconds => seconds + 1);\r\n        }, 1000);\r\n\r\n        return () => clearInterval(interval);\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <h1 className=\"output\">{seconds} seconds have passed.</h1>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UseState;\r\n`}\r\n                </code>\r\n            </pre>\r\n\r\n            <h3>Output:</h3>\r\n            <h1 className=\"output\">{seconds} seconds have passed.</h1>\r\n            <p>\r\n                'useEffect' takes two arguments: a function containing the side-effect logic and an optional dependency array.\r\n                If the dependency array is empty, the effect runs only once, after the initial render.\r\n                If you provide dependencies (state or props), it runs whenever those values change.\r\n            </p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UseEffect;","import {\r\n  UseStateAndUseEffect,\r\n  UseState,\r\n  UseEffect\r\n} from '../../components/hooks/usestate_and_useeffect';\r\n\r\nconst UseStateAndUseEffectPage = () => {\r\n  return (\r\n    <>\r\n      <UseStateAndUseEffect />\r\n      <UseState />\r\n      <UseEffect />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UseStateAndUseEffectPage;"],"names":["UseStateAndUseEffect","_jsxs","children","_jsx","className","UseState","count","setCount","useState","type","onClick","UseEffect","seconds","setSeconds","useEffect","interval","setInterval","clearInterval","UseStateAndUseEffectPage","_Fragment"],"sourceRoot":""}