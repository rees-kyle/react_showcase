{"version":3,"file":"static/js/15.63470c31.chunk.js","mappings":"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","sources":["components/styling/css_modules/CSSModules.js","components/styling/css_modules/SetUp.js","components/styling/css_modules/Usage.js","components/styling/css_modules/ConditionalStyling.js","components/styling/css_modules/CombiningClasses.js","webpack://project/./src/components/styling/css_modules/MyComponent.module.css?8f28","components/styling/css_modules/MyComponent.js","components/styling/css_modules/Summary.js","pages/styling/CSSModulesPage.js"],"sourcesContent":["const CSSModules = () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"underline\">CSS Modules</h1>\r\n      <p>\r\n        CSS Modules are a great way to style components in React with scoped, modular CSS.\r\n        They allow you to write CSS thatâ€™s local to a specific component,\r\n        preventing your styles from leaking across your app,\r\n        and they integrate smoothly with modern React development.\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CSSModules;","const SetUp = () => {\r\n  return (\r\n    <div>\r\n      <br/>\r\n      <hr/>\r\n      <h2>Setting Up CSS Modules</h2>\r\n      <p>\r\n        Create a CSS file with a `.module.css` extension, such as `MyComponent.module.css`,\r\n        and then import it in your component.\r\n        This import creates an object where each CSS class is accessible as a property.\r\n      </p>\r\n    \r\n      <h3>Code:</h3>\r\n      <pre>\r\n        <code>\r\n          {`import styles from './MyComponent.module.css';`}\r\n        </code>\r\n      </pre>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SetUp;","const Usage = () => {\r\n  return (\r\n    <div>\r\n      <br/>\r\n      <hr/>\r\n      <h2>Using CSS Modules</h2>\r\n      <p>\r\n        Once imported, you can apply styles using the styles object.\r\n        Each class name in the generated HTML is unique,\r\n        ensuring there are no conflicts with other components.\r\n      </p>\r\n    \r\n      <h3>Code:</h3>\r\n      <pre>\r\n        <code>\r\n          {`.container {\r\n    background-color: #CCCCCC;\r\n    padding: 20px;\r\n    border-radius: 5px;\r\n    text-align: center;\r\n}\r\n\r\n.title {\r\n    color: #333;\r\n    font-size: 24px;\r\n    margin-bottom: 20px;\r\n}\r\n`}\r\n        </code>\r\n      </pre>\r\n      <br/>\r\n      <pre>\r\n        <code>\r\n          {`import React from \"react\";\r\nimport styles from \"./MyComponent.module.css\";\r\n\r\nconst MyComponent = () => {\r\n    return (\r\n        <div className={styles.container}>\r\n            <h1 className={styles.title}>Hello, CSS Modules!</h1>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyComponent;\r\n`}\r\n        </code>\r\n      </pre>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Usage;","const ConditionalStyling = () => {\r\n  return (\r\n    <div>\r\n      <br/>\r\n      <hr/>\r\n      <h2>Conditional Styling</h2>\r\n      <p>\r\n        You can dynamically apply classes based on component state or props.\r\n      </p>\r\n    \r\n      <h3>Code:</h3>\r\n      <pre>\r\n        <code>\r\n          {`<div className={someCondition ? styles.active : styles.inactive}>Content</div>`}\r\n        </code>\r\n      </pre>\r\n      <br/>\r\n      <pre>\r\n        <code>\r\n          {`.active {\r\n    background-color: #4CAF50;\r\n\tcolor: white;\r\n\tborder: 2px solid #388E3C;\r\n\tpadding: 10px;\r\n\tborder-radius: 5px;\r\n}\r\n\r\n.inactive {\r\n\tbackground-color: #f0f0f0;\r\n\tcolor: #666;\r\n\tborder: 2px solid #ccc;\r\n\tpadding: 10px;\r\n\tborder-radius: 5px;\r\n}\r\n`}\r\n        </code>\r\n      </pre>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConditionalStyling;","const CombiningClasses = () => {\r\n  return (\r\n    <div>\r\n      <br/>\r\n      <hr/>\r\n      <h2>Combining Classes</h2>\r\n      <p>\r\n        You can apply multiple classes using template literals.\r\n      </p>\r\n    \r\n      <h3>Code:</h3>\r\n      <pre>\r\n        <code>\r\n          {'<div className={`${styles.box} ${styles.border}`}>Content</div>'}\r\n        </code>\r\n      </pre>\r\n      <br/>\r\n      <pre>\r\n        <code>\r\n          {`.box {\r\n    padding: 10px;\r\n    font-size: 18px;\r\n}\r\n\r\n.border {\r\n    border: 2px solid black;\r\n}\r\n`}\r\n        </code>\r\n      </pre>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CombiningClasses;","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"MyComponent_container__hQMFG\",\"title\":\"MyComponent_title__dhZly\",\"box\":\"MyComponent_box__Cw47s\",\"highlight\":\"MyComponent_highlight__XQ+JF\",\"border\":\"MyComponent_border__D8j2x\",\"button\":\"MyComponent_button__XSADt\"};","import React, { useState } from \"react\";\r\nimport styles from \"./MyComponent.module.css\";\r\n\r\nconst MyComponent = () => {\r\n    const [isHighlighted, setIsHighlighted] = useState(false);\r\n\r\n    return (\r\n        <div>\r\n            <br/>\r\n            <hr/>\r\n            <h2>Demo</h2>\r\n            <p>Here is a demonstration of all the previous techniques in one component.</p>\r\n\r\n            <h3>Code:</h3>\r\n            <pre>\r\n                <code>\r\n                    {`/* MyComponent.module.css */\r\n.container {\r\n    background-color: #CCCCCC;\r\n    padding: 20px;\r\n    border-radius: 5px;\r\n    text-align: center;\r\n}\r\n\r\n.title {\r\n    color: #333;\r\n    font-size: 24px;\r\n    margin-bottom: 20px;\r\n}\r\n\r\n.box {\r\n    padding: 10px;\r\n    border-radius: 5px;\r\n    font-size: 18px;\r\n    background-color: rgb(52, 52, 52);\r\n    transition: background-color 0.3s ease-in-out;\r\n}\r\n\r\n.highlight {\r\n    background-color: green;\r\n    font-weight: bold;\r\n}\r\n\r\n.border {\r\n    border: 2px solid black;\r\n}\r\n\r\n.button {\r\n    margin-top: 15px;\r\n    padding: 10px 15px;\r\n    background-color: #007bff;\r\n    color: white;\r\n    border: none;\r\n    border-radius: 5px;\r\n    cursor: pointer;\r\n    font-size: 16px;\r\n}\r\n\r\n.button:hover {\r\n    background-color: #0056b3;\r\n}\r\n`}\r\n                </code>\r\n            </pre>\r\n            <br/>\r\n            <pre>\r\n                <code>\r\n                    {\"// MyComponent.js\\n\" +\r\n'import React, { useState } from \"react\";\\n' +\r\n'import styles from \"./MyComponent.module.css\";\\n\\n' +\r\n\"const MyComponent = () => {\\n\" +\r\n\"    const [isHighlighted, setIsHighlighted] = useState(false);\\n\\n\" +\r\n\"    return (\\n\" +\r\n'        <div className={styles.container}>\\n' +\r\n'            <h1 className={styles.title}>CSS Modules - Multiple Classes</h1>\\n\\n' +\r\n// eslint-disable-next-line no-template-curly-in-string\r\n'            <div className={`${styles.box} ${isHighlighted ? styles.highlight : \"\"} ${styles.border}`}>\\n' +\r\n\"                This box has multiple styles applied.\\n\" +\r\n\"            </div>\\n\\n\" +\r\n'            <button type=\"button\" className={styles.button} onClick={() => setIsHighlighted(!isHighlighted)}>\\n' +\r\n\"                Toggle Highlight\\n\" +\r\n\"            </button>\\n\" +\r\n\"        </div>\\n\" +\r\n\"    );\\n\" +\r\n\"};\\n\\n\" +\r\n\"export default MyComponent;\\n\"\r\n}\r\n                </code>\r\n            </pre>\r\n            <h3>Output:</h3>\r\n            <div className={styles.container}>\r\n                <h1 className={styles.title}>CSS Modules - Multiple Classes</h1>\r\n\r\n                <div className={`${styles.box} ${isHighlighted ? styles.highlight : \"\"} ${styles.border}`}>\r\n                    This box has multiple styles applied.\r\n                </div>\r\n\r\n                <button type=\"button\" className={styles.button} onClick={() => setIsHighlighted(!isHighlighted)}>\r\n                    Toggle Highlight\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyComponent;","const Summary = () => {\r\n    return (\r\n        <div>\r\n            <br/>\r\n            <hr/>\r\n            <h2>Summary</h2>\r\n            <p>\r\n                CSS Modules provide modular, reusable styles that are scoped to components,\r\n                preventing global namespace conflicts and ensuring better maintainability.\r\n            </p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Summary;","import {\r\n  CSSModules,\r\n  SetUp,\r\n  Usage,\r\n  ConditionalStyling,\r\n  CombiningClasses,\r\n  MyComponent,\r\n  Summary\r\n} from '../../components/styling/css_modules';\r\n\r\nconst CSSModulesPage = () => {\r\n  return (\r\n    <>\r\n      <CSSModules />\r\n      <SetUp />\r\n      <Usage />\r\n      <ConditionalStyling />\r\n      <CombiningClasses />\r\n      <MyComponent />\r\n      <Summary />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CSSModulesPage;"],"names":["CSSModules","_jsxs","children","_jsx","className","SetUp","Usage","ConditionalStyling","CombiningClasses","MyComponent","isHighlighted","setIsHighlighted","useState","styles","type","onClick","Summary","CSSModulesPage","_Fragment"],"sourceRoot":""}