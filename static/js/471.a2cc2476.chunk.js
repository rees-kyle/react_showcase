"use strict";(self.webpackChunkproject=self.webpackChunkproject||[]).push([[471],{3384:(e,s,n)=>{n.r(s),n.d(s,{default:()=>j});var l=n(579);const i=()=>(0,l.jsxs)("div",{children:[(0,l.jsx)("h1",{className:"underline",children:"JSX Syntax"}),(0,l.jsx)("p",{children:"JSX stands for JavaScript XML. It is a syntax extension for JavaScript that looks similar to HTML and allows React components to render what they should look like. JSX makes it easier to write and visualize the structure of the user interface within React components."})]}),t=()=>(0,l.jsxs)("div",{children:[(0,l.jsx)("br",{}),(0,l.jsx)("hr",{}),(0,l.jsx)("h2",{children:"JSX Elements"}),(0,l.jsx)("p",{children:"JSX allows you to write HTML-like code directly in JavaScript files. It\u2019s not mandatory, but it\u2019s a very popular way to write React code."}),(0,l.jsx)("h3",{children:"Code:"}),(0,l.jsx)("pre",{children:(0,l.jsx)("code",{children:'<h1 className="output">Hello, world!</h1>'})}),(0,l.jsx)("h3",{children:"Output:"}),(0,l.jsx)("h1",{className:"output",children:"Hello, world!"})]}),c=()=>(0,l.jsxs)("div",{children:[(0,l.jsx)("br",{}),(0,l.jsx)("hr",{}),(0,l.jsx)("h2",{children:"Embedding Expressions"}),(0,l.jsx)("p",{children:"You can embed any valid JavaScript expression inside curly braces in JSX. For example, variables or function calls can be included within JSX."}),(0,l.jsx)("h3",{children:"Code:"}),(0,l.jsx)("pre",{children:(0,l.jsx)("code",{children:'const name = "Kyle";\n\n<h1 className="output">Hello, {name}!</h1>'})}),(0,l.jsx)("h3",{children:"Output:"}),(0,l.jsxs)("h1",{className:"output",children:["Hello, ","Kyle","!"]})]}),r=()=>(0,l.jsxs)("div",{children:[(0,l.jsx)("br",{}),(0,l.jsx)("hr",{}),(0,l.jsx)("h2",{children:"Parent Element"}),(0,l.jsx)("p",{children:"JSX expressions must be wrapped in a single parent element. You can use a div, section, or React.Fragment, or empty tags as a wrapper."}),(0,l.jsx)("h3",{children:"Code:"}),(0,l.jsx)("pre",{children:(0,l.jsx)("code",{children:'return ( \n    <div> \n        <h1 className="output">Hello, World!</h1>\n        <p className="output">This is a React component.</p> \n    </div>\n);'})}),(0,l.jsx)("h3",{children:"Output:"}),(0,l.jsx)("h1",{className:"output",children:"Hello, World!"}),(0,l.jsx)("p",{className:"output",children:"This is a React component."})]}),a=()=>{const e=(0,l.jsx)("button",{className:"btn",onClick:()=>{alert("Button clicked!")},children:"Click Me!"});return(0,l.jsxs)("div",{children:[(0,l.jsx)("br",{}),(0,l.jsx)("hr",{}),(0,l.jsx)("h2",{children:"Attributes"}),(0,l.jsx)("p",{children:"JSX uses camelCase for attribute names, such as className instead of class and onClick instead of onclick."}),(0,l.jsx)("h3",{children:"Code:"}),(0,l.jsx)("pre",{children:(0,l.jsx)("code",{children:"const handleClick = () => {\n    alert('Button clicked!');\n};\n\nconst attributeNames = <button className=\"btn\" onClick={handleClick}>Click Me!</button>;\n\n{attributeNames}\n"})}),(0,l.jsx)("h3",{children:"Output:"}),e]})},d=n.p+"static/media/example.5dd22238753e1868b539.jpg",h=()=>(0,l.jsxs)("div",{children:[(0,l.jsx)("br",{}),(0,l.jsx)("hr",{}),(0,l.jsx)("h2",{children:"Self Closing Tags"}),(0,l.jsx)("p",{children:"In HTML, a self-closing tag is typically written using a single tag with a slash before the closing angle bracket. This indicates that the element does not have any child elements or content inside it."}),(0,l.jsx)("h3",{children:"Code:"}),(0,l.jsx)("pre",{children:(0,l.jsx)("code",{children:'<img src={example} alt="An example image" />'})}),(0,l.jsx)("h3",{children:"Output:"}),(0,l.jsx)("div",{className:"img-container",children:(0,l.jsx)("img",{src:d,alt:"An example"})})]}),o=()=>(0,l.jsxs)("div",{children:[(0,l.jsx)("br",{}),(0,l.jsx)("hr",{}),(0,l.jsx)("h2",{children:"JavaScript Logic in JSX"}),(0,l.jsx)("p",{children:"JSX can contain JavaScript logic, such as conditionals or loops."}),(0,l.jsx)("h3",{children:"Code:"}),(0,l.jsx)("pre",{children:(0,l.jsx)("code",{children:"const isLoggedIn = true;\n\n<h1 className=\"output\">{isLoggedIn ? 'Welcome back!' : 'Please sign up.'}</h1>"})}),(0,l.jsx)("h3",{children:"Output:"}),(0,l.jsx)("h1",{className:"output",children:"Welcome back!"})]}),x=()=>(0,l.jsxs)("div",{children:[(0,l.jsx)("br",{}),(0,l.jsx)("hr",{}),(0,l.jsx)("h2",{children:"Styling in JSX"}),(0,l.jsx)("p",{children:"Inline styles in JSX are written as an object with camelCase property names."}),(0,l.jsx)("h3",{children:"Code:"}),(0,l.jsx)("pre",{children:(0,l.jsx)("code",{children:"const divStyle = { color: 'palevioletred' };\n\n<h1 style={divStyle}>Styled Text</h1>"})}),(0,l.jsx)("h3",{children:"Output:"}),(0,l.jsx)("h1",{style:{color:"palevioletred"},children:"Styled Text"})]}),j=()=>(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(i,{}),(0,l.jsx)(t,{}),(0,l.jsx)(c,{}),(0,l.jsx)(r,{}),(0,l.jsx)(a,{}),(0,l.jsx)(h,{}),(0,l.jsx)(o,{}),(0,l.jsx)(x,{})]})}}]);
//# sourceMappingURL=471.a2cc2476.chunk.js.map